// <auto-generated />
using System;
using Billing.Data.Models.Iam;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Billing.Data.Migrations
{
    [DbContext(typeof(IAMContext))]
    [Migration("20241025070116_InitCreate")]
    partial class InitCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Billing.Data.Models.ServiceHierarchy", b =>
                {
                    b.Property<long>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sno"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("ParentAccId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SavedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SaverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Sno")
                        .HasName("PK_ServiceHierarchy_Sno");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Sno"), false);

                    b.HasIndex(new[] { "TenantId", "ParentAccId", "AccountId" }, "IDX_unique_ServiceHierarchy_TenantId_ParentAccId_AccountId")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "TenantId", "ParentAccId", "AccountId" }, "IDX_unique_ServiceHierarchy_TenantId_ParentAccId_AccountId"));

                    b.ToTable("ServiceHierarchy");
                });

            modelBuilder.Entity("Billing.Data.Models.Tenant", b =>
                {
                    b.Property<long>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SNo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sno"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("RealmName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("SavedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SaverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComputedColumnSql("(CONVERT([varchar](50),concat(CONVERT([varchar](10),left(lower([RealmName]),(10))),CONVERT([varchar](1),'-'),CONVERT([varchar](3),right(lower(CONVERT([varchar](50),[TUId])),(3))),CONVERT([varchar](2),right('00'+CONVERT([varchar],[SNo]),(2))))))", true);

                    b.Property<Guid>("Tuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TUId");

                    b.HasKey("Sno");

                    b.HasIndex(new[] { "RealmName", "OwnerId" }, "IDX_Tenant_RealmName_OwnerId")
                        .IsUnique();

                    b.HasIndex(new[] { "TenantId" }, "IDX_Tenant_TenantId")
                        .IsUnique();

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("Billing.Data.Models.ServiceHierarchy", b =>
                {
                    b.HasOne("Billing.Data.Models.Tenant", "Tenant")
                        .WithMany("ServiceHierarchies")
                        .HasForeignKey("TenantId")
                        .HasPrincipalKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK_ServiceHierarchy_TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Billing.Data.Models.Tenant", b =>
                {
                    b.Navigation("ServiceHierarchies");
                });
#pragma warning restore 612, 618
        }
    }
}
